import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
import streamlit as st

# âœ… ØªØ­Ù„ÙŠÙ„ Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª ÙˆØ§Ù„ØªÙ†Ø¨Ø¤ Ø¨Ø§Ù„Ø£Ø³Ø¹Ø§Ø± Ø§Ù„Ù…Ø³ØªÙ‚Ø¨Ù„ÙŠØ©
def analyze_results(df):
    df = df.copy()
    df["Price_per_mÂ²"] = df["Price"] / df["Area(mÂ²)"]

    # ðŸ”¢ ØªØ¯Ø±ÙŠØ¨ Ù†Ù…ÙˆØ°Ø¬ Ø¨Ø³ÙŠØ· Ù„Ù„ØªÙ†Ø¨Ø¤ Ø¨Ø§Ù„Ø£Ø³Ø¹Ø§Ø± Ø§Ù„Ù…Ø³ØªÙ‚Ø¨Ù„ÙŠØ©
    X = np.array(df["Area(mÂ²)"]).reshape(-1, 1)
    y = np.array(df["Price"])
    model = LinearRegression().fit(X, y)

    future_areas = np.linspace(50, 500, 10).reshape(-1, 1)
    future_prices = model.predict(future_areas)

    prediction_df = pd.DataFrame({
        "Area(mÂ²)": future_areas.flatten(),
        "Predicted Price": future_prices.astype(int)
    })

    # ðŸ“Š Ø±Ø³Ù… Histogram Ù„ØªÙˆØ²ÙŠØ¹ Ø§Ù„Ø£Ø³Ø¹Ø§Ø±
    fig, ax = plt.subplots()
    ax.hist(df["Price"], bins=10)
    ax.set_title("ØªÙˆØ²ÙŠØ¹ Ø£Ø³Ø¹Ø§Ø± Ø§Ù„Ø¹Ù‚Ø§Ø±Ø§Øª")
    ax.set_xlabel("Ø§Ù„Ø³Ø¹Ø± (Ø¨Ø§Ù„Ø¯ÙˆÙ„Ø§Ø±)")
    ax.set_ylabel("Ø¹Ø¯Ø¯ Ø§Ù„Ø¹Ù‚Ø§Ø±Ø§Øª")
    st.pyplot(fig)

    return prediction_df
