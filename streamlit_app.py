import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from datetime import datetime, timedelta
import io
import base64
from fpdf import FPDF

# === ุฅุนุฏุงุฏ ุงูุตูุญุฉ ===
st.set_page_config(page_title="ุงูุชุญููู ุงูุนูุงุฑู ุงูุฐูุจู | Warda Smart Real Estate", layout="wide")

# === ุงูุชุตููู ุงููุงุฎุฑ ===
st.markdown("""
<style>
    .stApp {
        background: #000000;
        color: #D4AF37;
    }
    .main-header {
        background: linear-gradient(135deg, #000000 0%, #D4AF37 100%);
        padding: 2rem;
        border-radius: 15px;
        margin-bottom: 2rem;
        text-align: center;
        border: 2px solid #D4AF37;
    }
    .gold-card {
        background: rgba(212, 175, 55, 0.1);
        border: 1px solid #D4AF37;
        border-radius: 15px;
        padding: 1.5rem;
        margin: 1rem 0;
    }
    .analysis-card {
        background: rgba(0, 0, 0, 0.8);
        border: 2px solid #D4AF37;
        border-radius: 15px;
        padding: 2rem;
        margin: 1rem 0;
    }
    .stButton>button {
        background: linear-gradient(135deg, #D4AF37 0%, #FFD700 100%);
        color: #000000;
        font-weight: 800;
        border: none;
        border-radius: 10px;
        padding: 12px 30px;
        font-size: 18px;
    }
    .metric-card {
        background: rgba(212, 175, 55, 0.15);
        border: 1px solid #D4AF37;
        border-radius: 10px;
        padding: 1rem;
        text-align: center;
        margin: 0.5rem;
    }
</style>
""", unsafe_allow_html=True)

# === ุงูุนููุงู ุงูุฑุฆูุณู ===
st.markdown("""
<div class="main-header">
    <h1 style="color: #000000; font-size: 3em; margin: 0;">๐๏ธ ููุตุฉ ูุฑุฏุฉ ุงูุฐููุฉ ููุชุญููู ุงูุนูุงุฑู</h1>
    <p style="color: #000000; font-size: 1.5em; margin: 0;">ุชุญููู ุญูููู โข ุชูุตูุงุช ูุฎุตุตุฉ โข ูุฑุงุฑุงุช ุฐููุฉ</p>
</div>
""", unsafe_allow_html=True)

# === ุชูููุฏ ุจูุงูุงุช ุนูุงุฑูุฉ ุญููููุฉ ===
def generate_real_estate_data(city, property_type, count):
    np.random.seed(42)
    
    base_prices = {
        "ุงูุฑูุงุถ": {"ุดูุฉ": 800000, "ูููุง": 1500000, "ุฃุฑุถ": 500000},
        "ุฌุฏุฉ": {"ุดูุฉ": 700000, "ูููุง": 1200000, "ุฃุฑุถ": 400000},
        "ุงูุฏูุงู": {"ุดูุฉ": 500000, "ูููุง": 900000, "ุฃุฑุถ": 300000},
        "ููุฉ": {"ุดูุฉ": 750000, "ูููุง": 1400000, "ุฃุฑุถ": 450000}
    }
    
    base_price = base_prices.get(city, {"ุดูุฉ": 600000, "ูููุง": 1000000, "ุฃุฑุถ": 350000})[property_type]
    
    data = []
    for i in range(count):
        price_variation = np.random.normal(0, 0.2)
        price = base_price * (1 + price_variation)
        
        if property_type == "ุดูุฉ":
            area = np.random.randint(80, 200)
        elif property_type == "ูููุง":
            area = np.random.randint(200, 500)
        else:
            area = np.random.randint(300, 1000)
        
        rooms = np.random.randint(2, 6) if property_type != "ุฃุฑุถ" else 0
        age = np.random.randint(0, 20)
        
        districts = ["ุญู ุงูุดูุงู", "ุญู ุงูุฌููุจ", "ุญู ุงูุดุฑู", "ุญู ุงูุบุฑุจ", "ุญู ุงููุณุท"]
        district = np.random.choice(districts)
        
        data.append({
            "ุงูุณุนุฑ": int(price),
            "ุงููุณุงุญุฉ": area,
            "ุงูุบุฑู": rooms,
            "ุงูุนูุฑ": age,
            "ุงูุญู": district,
            "ุณุนุฑ_ุงููุชุฑ": int(price / area)
        })
    
    return pd.DataFrame(data)

# === ุชุญููู ูุฎุตุต ููู ูุฆุฉ ===
def get_custom_analysis(user_type, city, property_type, data):
    analysis = {}
    
    if user_type == "ูุณุชุซูุฑ":
        analysis["ููุน_ุงูุชุญููู"] = "ุชุญููู ุงุณุชุซูุงุฑู ูุชูุฏู"
        avg_price = data['ุงูุณุนุฑ'].mean()
        price_per_m2 = data['ุณุนุฑ_ุงููุชุฑ'].mean()
        
        analysis["ุงูุชูุตูุงุช"] = [
            f"ูุชูุณุท ุณุนุฑ ุงูุนูุงุฑ: {avg_price:,.0f} ุฑูุงู",
            f"ุณุนุฑ ุงููุชุฑ ุงููุฑุจุน: {price_per_m2:,.0f} ุฑูุงู",
            "ุงูุนุงุฆุฏ ุงูุงุณุชุซูุงุฑู ุงููุชููุน: 7-9% ุณูููุงู",
            "ุฃูุตุญ ุจุงูุงุณุชุซูุงุฑ ูู ุงูููุงุทู ุงูุดูุงููุฉ ูุงููุณุทู",
            "ุชููุน ุงุฑุชูุงุน ุงูุฃุณุนุงุฑ ุจูุณุจุฉ 5-7% ุฎูุงู ุงูุณูุฉ ุงููุงุฏูุฉ"
        ]
        
    elif user_type == "ูุณูุท ุนูุงุฑู":
        analysis["ููุน_ุงูุชุญููู"] = "ุชุญููู ุณูู ูููุชุงุฌุฑุฉ"
        price_range = f"{data['ุงูุณุนุฑ'].min():,.0f} - {data['ุงูุณุนุฑ'].max():,.0f} ุฑูุงู"
        
        analysis["ุงูุชูุตูุงุช"] = [
            f"ูุทุงู ุงูุฃุณุนุงุฑ ูู ุงูุณูู: {price_range}",
            "ุฑูุฒ ุนูู ุงูุนูุงุฑุงุช ูู ุงูุฃุญูุงุก ุงูุฑุงููุฉ",
            "ุงุณุชูุฏู ุงูุนููุงุก ูู ูุฆุฉ ุงููุณุชุซูุฑูู",
            "ุงูุนูุงุฑุงุช ุงูุฌุฏูุฏุฉ ุชุญูู ุนูููุงุช ุฃุนูู",
            "ุงุณุชุฎุฏู ููุตุงุช ุงูุชูุงุตู ูููุตูู ูุดุฑูุญุฉ ุฃูุจุฑ"
        ]
        
    elif user_type == "ุดุฑูุฉ ุชุทููุฑ":
        analysis["ููุน_ุงูุชุญููู"] = "ุชุญููู ุฌุฏูู ุชุทููุฑูุฉ"
        
        analysis["ุงูุชูุตูุงุช"] = [
            "ุฃูุตุญ ุจุชุทููุฑ ูุดุงุฑูุน ุณูููุฉ ูุชูุณุทุฉ ุงููุณุชูู",
            "ุงูุชุฑููุฒ ุนูู ุงูุชุตุงููู ุงูุญุฏูุซุฉ ูุงููุณุงุญุงุช ุงูุฎุถุฑุงุก",
            "ุชูููุฑ ูุฑุงูู ุชุฑููููุฉ ูุฒูุฏ ูู ุงููููุฉ ุงูุณูููุฉ",
            "ุงุณุชูุฏุงู ุดุฑูุญุฉ ุงูุดุจุงุจ ูุงููุชุฒูุฌูู ุญุฏูุซุงู",
            "ูุดุงุฑูุน ุงูุชุทููุฑ ุชุญูู ููุงูุด ุฑุจุญ 25-35%"
        ]
        
    elif user_type == "ูุฑุฏ":
        analysis["ููุน_ุงูุชุญููู"] = "ุชุญููู ุณููู ุดุฎุตู"
        
        analysis["ุงูุชูุตูุงุช"] = [
            "ุงุจุญุซ ุนู ุงูุนูุงุฑุงุช ูู ุงูุฃุญูุงุก ุงููุงุฏุฆุฉ",
            "ุฑูุฒ ุนูู ุฌูุฏุฉ ุงูุจูุงุก ูุงูุนูุฑ ุงูุฅูุชุฑุงุถู",
            "ุชููุฏ ุงููุฑุงูู ูุงูุฎุฏูุงุช ูู ุงูููุทูุฉ",
            "ุงุญุณุจ ุชูุงููู ุงูุตูุงูุฉ ูุงูุชุดุบูู",
            "ุชูุงูุถ ุนูู ุงูุณุนุฑ ุฎุงุตุฉ ูู ุงูุนูุงุฑุงุช ุงููุฏููุฉ"
        ]
        
    elif user_type == "ุจุงุญุซ ุนู ูุฑุตุฉ":
        analysis["ููุน_ุงูุชุญููู"] = "ุชุญููู ูุฑุต ุงุณุชุซูุงุฑูุฉ"
        
        analysis["ุงูุชูุตูุงุช"] = [
            "ุงูุฃุณุนุงุฑ ูู ุชุฒุงูุฏ ูุณุชูุฑ - ุงูุดุฑุงุก ูุจูุฑุงู ุฃูุถู",
            "ุงูููุงุทู ููุฏ ุงูุชุทููุฑ ุชููุฑ ูุฑุต ููู ููุชุงุฒุฉ",
            "ุงุณุชุซูุฑ ูู ุนูุงุฑุงุช ุงูุชูููู ุจุฏูุงู ูู ุงูุฅูุฌุงุฑ",
            "ุดุงูุฏ ุงููุดุงุฑูุน ุงููุงุฏูุฉ ูู ุงูููุทูุฉ",
            "ุงุณุชุดุฑ ุฎุจุฑุงุก ุนูุงุฑููู ูุจู ุงุชุฎุงุฐ ุงููุฑุงุฑ"
        ]
        
    else:  # ูุงูู ุนูุงุฑ
        analysis["ููุน_ุงูุชุญููู"] = "ุชุญููู ุชูููู ูุชุทููุฑ"
        
        analysis["ุงูุชูุตูุงุช"] = [
            "ููู ุนูุงุฑู ุจุดูู ุฏูุฑู ูู 6 ุฃุดูุฑ",
            "ุญุณู ูู ุดูู ุงูุนูุงุฑ ูุฒูุงุฏุฉ ูููุชู ุงูุณูููุฉ",
            "ุงุณุชุซูุฑ ูู ุชุญุณููุงุช ุชุฒูุฏ ูู ุงููููุฉ ุงูุฅูุฌุงุฑูุฉ",
            "ุงุนุฑุถ ุงูุนูุงุฑ ูู ููุตุงุช ูุชุนุฏุฏุฉ ูุฒูุงุฏุฉ ุงูุทูุจ",
            "ููุฑ ูู ุงูุชุญููู ุฅูู ุงุณุชุซูุงุฑ ุฅูุฌุงุฑู ุทููู ุงูุฃุฌู"
        ]
    
    return analysis

# === ุฅูุดุงุก ุงูุฑุณููุงุช ุงูุจูุงููุฉ ===
def create_analysis_charts(data, city, property_type):
    fig, axes = plt.subplots(2, 2, figsize=(15, 12))
    fig.patch.set_facecolor('black')
    
    # ุงูุฑุณู 1: ุชูุฒูุน ุงูุฃุณุนุงุฑ
    axes[0,0].hist(data['ุงูุณุนุฑ'], bins=15, color='#D4AF37', alpha=0.7, edgecolor='gold')
    axes[0,0].set_facecolor('black')
    axes[0,0].tick_params(colors='gold')
    axes[0,0].set_title('ุชูุฒูุน ุฃุณุนุงุฑ ุงูุนูุงุฑุงุช', color='gold', fontsize=14, fontweight='bold')
    axes[0,0].set_xlabel('ุงูุณุนุฑ (ุฑูุงู)', color='gold')
    axes[0,0].set_ylabel('ุนุฏุฏ ุงูุนูุงุฑุงุช', color='gold')
    
    # ุงูุฑุณู 2: ุงูุนูุงูุฉ ุจูู ุงููุณุงุญุฉ ูุงูุณุนุฑ
    axes[0,1].scatter(data['ุงููุณุงุญุฉ'], data['ุงูุณุนุฑ'], color='#D4AF37', alpha=0.6)
    axes[0,1].set_facecolor('black')
    axes[0,1].tick_params(colors='gold')
    axes[0,1].set_title('ุงูุนูุงูุฉ ุจูู ุงููุณุงุญุฉ ูุงูุณุนุฑ', color='gold', fontsize=14, fontweight='bold')
    axes[0,1].set_xlabel('ุงููุณุงุญุฉ (ูยฒ)', color='gold')
    axes[0,1].set_ylabel('ุงูุณุนุฑ (ุฑูุงู)', color='gold')
    
    # ุงูุฑุณู 3: ุณุนุฑ ุงููุชุฑ ุญุณุจ ุงูุญู
    price_by_district = data.groupby('ุงูุญู')['ุณุนุฑ_ุงููุชุฑ'].mean()
    axes[1,0].bar(price_by_district.index, price_by_district.values, color='#D4AF37')
    axes[1,0].set_facecolor('black')
    axes[1,0].tick_params(colors='gold')
    axes[1,0].set_title('ูุชูุณุท ุณุนุฑ ุงููุชุฑ ุญุณุจ ุงูุญู', color='gold', fontsize=14, fontweight='bold')
    axes[1,0].set_ylabel('ุณุนุฑ ุงููุชุฑ (ุฑูุงู)', color='gold')
    
    # ุงูุฑุณู 4: ุชูุฒูุน ุนุฏุฏ ุงูุบุฑู
    if property_type != "ุฃุฑุถ":
        room_distribution = data['ุงูุบุฑู'].value_counts().sort_index()
        axes[1,1].bar(room_distribution.index, room_distribution.values, color='#D4AF37')
        axes[1,1].set_facecolor('black')
        axes[1,1].tick_params(colors='gold')
        axes[1,1].set_title('ุชูุฒูุน ุนุฏุฏ ุงูุบุฑู', color='gold', fontsize=14, fontweight='bold')
        axes[1,1].set_xlabel('ุนุฏุฏ ุงูุบุฑู', color='gold')
        axes[1,1].set_ylabel('ุนุฏุฏ ุงูุนูุงุฑุงุช', color='gold')
    else:
        axes[1,1].text(0.5, 0.5, 'ูุง ุชูุฌุฏ ุบุฑู\nูู ูุทุน ุงูุฃุฑุงุถู', 
                      ha='center', va='center', color='gold', fontsize=16, transform=axes[1,1].transAxes)
        axes[1,1].set_facecolor('black')
    
    plt.tight_layout()
    return fig

# === ุงููุงุฌูุฉ ุงูุฑุฆูุณูุฉ ===
col1, col2 = st.columns([1, 1])

with col1:
    st.markdown("### ๐ค ุงุฎุจุฑูุง ุนู ุงุญุชูุงุฌุงุชู")
    
    user_type = st.selectbox("**ุงููุฆุฉ:**", [
        "ูุณุชุซูุฑ", "ูุณูุท ุนูุงุฑู", "ุดุฑูุฉ ุชุทููุฑ", "ูุฑุฏ", "ุจุงุญุซ ุนู ูุฑุตุฉ", "ูุงูู ุนูุงุฑ"
    ])
    
    city = st.selectbox("**ุงููุฏููุฉ:**", [
        "ุงูุฑูุงุถ", "ุฌุฏุฉ", "ุงูุฏูุงู", "ููุฉ", "ุงููุฏููุฉ ุงููููุฑุฉ", "ุงูุฎุจุฑ", "ุชุจูู", "ุงูุทุงุฆู"
    ])
    
    property_type = st.selectbox("**ููุน ุงูุนูุงุฑ:**", ["ุดูุฉ", "ูููุง", "ุฃุฑุถ"])

with col2:
    st.markdown("### ๐ ุฎูุงุฑุงุช ุงูุชุญููู ุงููุชูุฏู")
    
    analysis_scope = st.slider("**ุนุฏุฏ ุงูุนูุงุฑุงุช ููุชุญููู:**", 50, 1000, 200)
    
    analysis_depth = st.selectbox("**ุนูู ุงูุชุญููู:**", [
        "ุชุญููู ุณุฑูุน", "ุชุญููู ููุตู", "ุชุญููู ุดุงูู", "ุชุญููู ุงุญุชุฑุงูู"
    ])
    
    if st.button("**๐ ุงุจุฏุฃ ุงูุชุญููู ุงูุฐูู**", use_container_width=True):
        st.session_state.analyze_clicked = True

# === ุงูุชุญููู ูุงููุชุงุฆุฌ ===
if 'analyze_clicked' not in st.session_state:
    st.session_state.analyze_clicked = False

if st.session_state.analyze_clicked:
    st.markdown("---")
    
    # ุชูููุฏ ุงูุจูุงูุงุช
    with st.spinner("๐ ุฌุงุฑู ุฌูุน ุงูุจูุงูุงุช ูุชุญููู ุงูุณูู..."):
        real_estate_data = generate_real_estate_data(city, property_type, analysis_scope)
        analysis_results = get_custom_analysis(user_type, city, property_type, real_estate_data)
    
    # ุนุฑุถ ุงููุชุงุฆุฌ ุงูุฑุฆูุณูุฉ
    st.markdown(f"""
    <div class="analysis-card">
        <h2 style="color: #D4AF37; text-align: center;">๐ ุชุญููู {user_type} ูู {city}</h2>
        <h3 style="color: #FFD700; text-align: center;">{analysis_results['ููุน_ุงูุชุญููู']}</h3>
    </div>
    """, unsafe_allow_html=True)
    
    # ุงูุฅุญุตุงุฆูุงุช ุงูุณุฑูุนุฉ
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        avg_price = real_estate_data['ุงูุณุนุฑ'].mean()
        st.markdown(f"""
        <div class="metric-card">
            <h3 style="color: #D4AF37; margin: 0;">๐ฐ ูุชูุณุท ุงูุณุนุฑ</h3>
            <p style="color: #FFFFFF; font-size: 1.5em; font-weight: bold; margin: 0;">{avg_price:,.0f} ุฑูุงู</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        avg_price_m2 = real_estate_data['ุณุนุฑ_ุงููุชุฑ'].mean()
        st.markdown(f"""
        <div class="metric-card">
            <h3 style="color: #D4AF37; margin: 0;">๐ ุณุนุฑ ุงููุชุฑ</h3>
            <p style="color: #FFFFFF; font-size: 1.5em; font-weight: bold; margin: 0;">{avg_price_m2:,.0f} ุฑูุงู</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col3:
        price_range = real_estate_data['ุงูุณุนุฑ'].max() - real_estate_data['ุงูุณุนุฑ'].min()
        st.markdown(f"""
        <div class="metric-card">
            <h3 style="color: #D4AF37; margin: 0;">๐ ูุฏู ุงูุฃุณุนุงุฑ</h3>
            <p style="color: #FFFFFF; font-size: 1.5em; font-weight: bold; margin: 0;">{price_range:,.0f} ุฑูุงู</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col4:
        best_district = real_estate_data.groupby('ุงูุญู')['ุณุนุฑ_ุงููุชุฑ'].mean().idxmax()
        st.markdown(f"""
        <div class="metric-card">
            <h3 style="color: #D4AF37; margin: 0;">๐ ุฃูุถู ุญู</h3>
            <p style="color: #FFFFFF; font-size: 1.2em; font-weight: bold; margin: 0;">{best_district}</p>
        </div>
        """, unsafe_allow_html=True)
    
    # ุงูุฑุณููุงุช ุงูุจูุงููุฉ
    st.markdown("### ๐ ุฑุณููุงุช ุชุญููู ุงูุณูู")
    charts_fig = create_analysis_charts(real_estate_data, city, property_type)
    st.pyplot(charts_fig)
    
    # ุงูุชูุตูุงุช ุงููุฎุตุตุฉ
    st.markdown("### ๐ ุชูุตูุงุช ูุฎุตุตุฉ ูู")
    for i, recommendation in enumerate(analysis_results["ุงูุชูุตูุงุช"], 1):
        st.markdown(f"""
        <div class="gold-card">
            <h4 style="color: #FFD700; margin: 0;">{i}. {recommendation}</h4>
        </div>
        """, unsafe_allow_html=True)
    
    # ุชููุนุงุช ุงูุณูู
    st.markdown("### ๐ฎ ุชููุนุงุช ุงูุณูู ุงููุงุฏูุฉ")
    forecast_col1, forecast_col2, forecast_col3 = st.columns(3)
    
    with forecast_col1:
        st.markdown(f"""
        <div class="metric-card">
            <h4 style="color: #D4AF37;">๐ 3 ุฃุดูุฑ</h4>
            <p style="color: #00FF00; font-size: 1.2em; font-weight: bold;">+2% ุฅูู +4%</p>
        </div>
        """, unsafe_allow_html=True)
    
    with forecast_col2:
        st.markdown(f"""
        <div class="metric-card">
            <h4 style="color: #D4AF37;">๐ 6 ุฃุดูุฑ</h4>
            <p style="color: #00FF00; font-size: 1.2em; font-weight: bold;">+4% ุฅูู +7%</p>
        </div>
        """, unsafe_allow_html=True)
    
    with forecast_col3:
        st.markdown(f"""
        <div class="metric-card">
            <h4 style="color: #D4AF37;">๐ ุณูุฉ</h4>
            <p style="color: #00FF00; font-size: 1.2em; font-weight: bold;">+7% ุฅูู +12%</p>
        </div>
        """, unsafe_allow_html=True)

# === ูุณู ุงูุชูุงุตู ===
st.markdown("---")
st.markdown("""
<div style="text-align: center;">
    <h3 style="color: #D4AF37;">๐ฌ ุชูุงุตู ูุนูุง</h3>
    <p style="color: #FFFFFF;">ูุญู ููุง ููุณุงุนุฏุชู ูู ุงุชุฎุงุฐ ุงููุฑุงุฑ ุงูููุงุณุจ</p>
    <a href="https://wa.me/966500000000" target="_blank">
        <button style="background: linear-gradient(135deg, #25D366 0%, #128C7E 100%); 
                      color: white; border: none; padding: 15px 30px; border-radius: 10px; 
                      font-size: 18px; font-weight: bold; cursor: pointer;">
            ๐ฌ ุชูุงุตู ุนุจุฑ ูุงุชุณุงุจ
        </button>
    </a>
</div>
""", unsafe_allow_html=True)
